version: '3.8'

services:
  # 1. Config Server
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/Dazavv/config-repo
      SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START: "true"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 2. ะะด
  postgres-users:
    image: postgres:15-alpine
    container_name: postgres-users
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5431:5432"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-events:
    image: postgres:15-alpine
    container_name: postgres-events
    environment:
      POSTGRES_DB: events_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-group-events:
    image: postgres:15-alpine
    container_name: postgres-group-events
    environment:
      POSTGRES_DB: group-events-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. Eureka Server
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_APPLICATION_NAME: eureka-server
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # 4. User Service
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_APPLICATION_NAME: user-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-users:5432/users
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres-users:5432/users
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-users:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # 5. Event Service
  event-service:
    build: ./event-service
    container_name: event-service
    ports:
      - "8082:8082"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_APPLICATION_NAME: event-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-events:5432/events_db
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres-events:5432/events_db
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres-events:5432/events_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-events:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # 6. Group Event Service
  group-event-service:
    build: ./group-event-service
    container_name: group-event-service
    ports:
      - "8083:8083"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_APPLICATION_NAME: group-event-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-group-events:5432/group-events-db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-group-events:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # 7. Gateway Service
  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_APPLICATION_NAME: gateway-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  microservices-net:
    driver: bridge